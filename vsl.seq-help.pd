#N canvas 241 87 1364 813 12;
#X floatatom 27 521 5 0 0 0 - - - 0;
#X obj 39 550 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X text 27 65 PARAMETERS;
#X text 116 177 length, f 12;
#X text 116 202 float (1-32);
#X text 226 177 color, f 23;
#X text 416 177 height, f 12;
#X text 416 202 float (0-32);
#X text 416 226 3 (default), f 12;
#X text 116 226 16 (default);
#X text 524 202 float (0-32), f 17;
#X text 524 177 grid, f 17;
#X floatatom 670 258 5 0 0 0 - - - 0;
#X obj 670 284 s \$0-receive;
#X text 63 549 bang to increase pos;
#X text 72 520 set absolute position;
#X text 1120 65 EXAMPLES;
#X msg 27 399 set 1 0;
#X msg 35 424 set 1 1;
#X text 25 372 set single values;
#X obj 27 451 s \$0-receive;
#X text 668 226 \$0-receive, f 14;
#X obj 795 257 r \$0-send;
#X obj 188 451 s \$0-receive;
#N canvas 504 149 829 698 easings 0;
#N canvas 0 50 450 250 (subpatch) 0;
#X array linear 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 47 195 graph;
#N canvas 234 234 1117 745 formulas 0;
#X obj 250 143 expr if($f1 < 0.5 \, 4 * pow($f1 \, 3) \, 1 - pow(-2.0
* $f1 + 2 \, 3) / 2), f 69;
#X obj 250 162 s \$0-value;
#X obj 250 114 s \$0-value;
#X obj 250 45 s \$0-value;
#X obj 127 143 r \$0-inout-cubic;
#X obj 250 328 s \$0-value;
#X obj 250 280 s \$0-value;
#X obj 147 309 r \$0-in-cubic;
#X obj 93 261 r \$0-in;
#X obj 250 309 expr pow($f1 \, 3);
#X obj 250 491 s \$0-value;
#X obj 250 443 s \$0-value;
#X obj 141 472 r \$0-out-cubic;
#X obj 250 472 expr 1 - pow(1 - $f1 \, 3) \;;
#X obj 162 45 r \$0-linear;
#X obj 89 45 r \$0-line;
#X obj 250 210 s \$0-value;
#X obj 250 376 s \$0-value;
#X obj 250 540 s \$0-value;
#X obj 134 191 r \$0-inout-expo;
#X obj 154 357 r \$0-in-expo;
#X obj 148 521 r \$0-out-expo;
#X obj 50 95 r \$0-inout;
#X obj 133 95 r \$0-inout-sine;
#X obj 154 261 r \$0-in-sine;
#X obj 148 424 r \$0-out-sine;
#X obj 250 617 s \$0-value;
#X obj 250 680 s \$0-value;
#X obj 134 569 r \$0-out-bounce;
#X obj 127 647 r \$0-out-elastic;
#X text 364 45 formulas copied from https://easings.net/en;
#X obj 250 191 expr if($f1 == 0 \, 0 \, if($f1 == 1 \, 1 \, if($f1
< 0.5 \, pow(2 \, 20 * $f1 - 10) / 2 \, (2 - pow(2 \, -20 * $f1 + 10))
/ 2))) \;, f 115;
#X obj 250 357 expr if($f1 == 0 \, 0 \, pow(2 \, 10 * $f1 - 10)) \;
;
#X obj 250 521 expr if($f1 == 1 \, 1 \, 1 - pow(2 \, -10 * $f1)) \;
;
#X obj 250 570 expr if($f1 < 1 / 2.75 \, 7.5625 * $f1 * $f1 \, if($f1
< 2 / 2.75 \, 7.5625 * pow($f1 - 1.5 / 2.75 \, 2) + 0.75 \, if($f1
< 2.5 / 2.75 \, 7.5625 * pow($f1 - 2.25 / 2.75 \, 2) + 0.9375 \, 7.5625
* pow($f1 - 2.625 / 2.75 \, 2) + 0.984375))) \;, f 97;
#X obj 250 647 expr if($f1 == 0 \, 0 \, if($f1 == 1 \, 1 \, pow(2 \,
-10 * $f1) * sin(($f1 * 10 - 0.75) * 2.0944) + 1)) \;;
#X obj 80 424 r \$0-out;
#X obj 250 261 expr 1 - cos(($f1 * 3.14159) / 2) \;;
#X obj 250 424 expr sin(($f1 * 3.14159) / 2) \;;
#X obj 250 95 expr -(cos(3.14159 * $f1) - 1) / 2;
#X connect 0 0 1 0;
#X connect 4 0 0 0;
#X connect 7 0 9 0;
#X connect 8 0 37 0;
#X connect 9 0 5 0;
#X connect 12 0 13 0;
#X connect 13 0 10 0;
#X connect 14 0 3 0;
#X connect 15 0 3 0;
#X connect 19 0 31 0;
#X connect 20 0 32 0;
#X connect 21 0 33 0;
#X connect 22 0 39 0;
#X connect 23 0 39 0;
#X connect 24 0 37 0;
#X connect 25 0 38 0;
#X connect 28 0 34 0;
#X connect 29 0 35 0;
#X connect 31 0 16 0;
#X connect 32 0 17 0;
#X connect 33 0 18 0;
#X connect 34 0 26 0;
#X connect 35 0 27 0;
#X connect 36 0 38 0;
#X connect 37 0 6 0;
#X connect 38 0 11 0;
#X connect 39 0 2 0;
#X restore 692 76 pd formulas;
#N canvas 723 225 576 573 render_easings 0;
#X obj 189 416 s;
#X obj 207 282 symbol;
#X msg 207 258 \$2-\$1;
#X obj 75 462 r \$0-value;
#X msg 73 202 128;
#X obj 73 226 until;
#X msg 105 202 0, f 4;
#X obj 73 250 f;
#X obj 103 250 + 1;
#X obj 73 274 t f f;
#X obj 73 298 / 127;
#X msg 97 66 linear \, inout \, inout-cubic \, inout-expo \, in \,
in-cubic \, in-expo \, out \, out-cubic \, out-expo \, out-bounce \,
out-elastic;
#X obj 75 500 array set;
#X obj 73 166 t b b;
#X obj 207 234 pack symbol \$0;
#X obj 135 349 symbol;
#X msg 158 462 edit 0;
#X obj 163 499 s;
#X obj 135 373 t s b s;
#X obj 97 127 t b a a;
#X obj 97 30 loadbang;
#X connect 1 0 0 1;
#X connect 2 0 1 0;
#X connect 3 0 12 0;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 1;
#X connect 9 0 10 0;
#X connect 9 1 12 1;
#X connect 10 0 0 0;
#X connect 11 0 19 0;
#X connect 13 0 4 0;
#X connect 13 1 6 0;
#X connect 14 0 2 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 18 0 12 2;
#X connect 18 1 16 0;
#X connect 18 2 17 1;
#X connect 19 0 13 0;
#X connect 19 1 15 0;
#X connect 19 2 14 0;
#X connect 20 0 11 0;
#X restore 650 52 pd render_easings;
#N canvas 0 50 450 250 (subpatch) 0;
#X array inout 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 197 195 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array inout-cubic 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 197 355 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array inout-expo 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 197 515 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array in 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 347 195 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array in-cubic 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 347 355 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array in-expo 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 347 515 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array out 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 497 195 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array out-cubic 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 497 355 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array out-expo 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 497 515 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array out-bounce 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 647 515 graph;
#N canvas 0 50 450 250 (subpatch) 0;
#X array out-elastic 128 float 0;
#X coords 0 1 127 0 128 128 1 0 0;
#X restore 647 355 graph;
#X text 92 177 (=line);
#X text 235 177 (=inout-sine);
#X text 365 177 (=in-sine);
#X text 522 177 (=out-sine);
#X text 45 46 The following ease modes are currently supported for
the transition of values, f 40;
#X restore 510 483 pd easings;
#X text 186 372 transition single values;
#X msg 188 399 set 1 0 500;
#X msg 196 424 set 1 1 1000;
#X text 24 342 INPUTS/OUTPUTS;
#X msg 175 616 pos-abs 6;
#X obj 396 451 s \$0-receive;
#X text 394 372 ease single values;
#X text 300 483 See possible ease-modes here:;
#X msg 404 424 set 1 1 1000 inout-expo;
#X msg 396 399 set 1 0 500 out;
#X obj 602 451 s \$0-receive;
#X floatatom 72 767 2 0 0 0 - - - 0;
#X text 91 768 left outlet outputs only values >0;
#X obj 439 628 s \$0-receive;
#X text 436 549 run through cycle;
#X obj 439 699 bng 31 250 50 0 empty empty empty 17 7 0 10 #e0c4fc
#000000 #000000;
#X obj 439 673 r done;
#X text 558 600 2nd is callback receiver;
#X obj 762 628 s \$0-receive;
#X text 760 549 stumble through cycle;
#X msg 49 577 reset;
#X msg 610 424 0.6 0.2 0.5 0.4 0.3 0.8 0.9 0;
#X text 600 372 transition all values (ease is optional);
#X msg 602 399 0.1 0.2 0.4 0.6 0.8 0.9 1 2000 out-bounce;
#X obj 1 324 cnv 1 1360 2 empty empty empty 20 12 0 14 #f0f0f0 #404040
0;
#X obj 928 451 s \$0-receive;
#X text 925 372 go to random index;
#X msg 928 399 random;
#X text 793 226 \$0-send, f 14;
#X text 226 202 float (0-999) or string;
#N canvas 0 50 450 250 (subpatch) 0;
#X array \$0-wave 131 float 0;
#X coords 0 1 130 -1 131 100 1 0 0;
#X restore 1180 670 graph;
#X text 1177 549 use as controller;
#N canvas 480 395 536 492 harmonics 0;
#X obj 41 34 inlet;
#X obj 131 151 list trim;
#X obj 99 95 t b l;
#X obj 41 58 route edit values;
#X obj 131 334 s \$0-wave;
#X obj 131 127 list prepend sinesum 128;
#X msg 41 384 output;
#X obj 41 408 s \$0-wavecontrol;
#X obj 99 250 min;
#X msg 99 283 normalize \$1;
#X msg 99 226 1;
#X obj 144 204 r \$0-normalize-range;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 10 0;
#X connect 2 1 5 0;
#X connect 3 0 6 0;
#X connect 3 1 2 0;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 4 0;
#X connect 10 0 8 0;
#X connect 11 0 8 1;
#X restore 1212 625 pd harmonics;
#X obj 406 767 cnv 15 16 16 empty empty empty 20 12 0 14 #faff00 #404040
0;
#X text 409 766 !;
#X obj 72 694 vsl.seq 4 -height 4 -color 324 -grid 4;
#A saved 0 2 0 1;
#X obj 27 635 vsl.seq 7 -color 879 -receiver \$0-receive -sender \$0-send
;
#A saved 0.9 0.5 0.4 0.6 0.2 0.3 0.8;
#X obj 1180 576 vsl.seq 8 -height 3 -color navy -receiver \$0-wavecontrol
-partition 8;
#A saved 1 0.5 0.333333 0.25 0.2 0.166667 0.142857 0.125;
#X text 500 575 1st param is cycle duration;
#X msg 439 576 run 800;
#X text 431 758 Behind the upper square of each slider is a bang object
to switch to this position For manipulating values \, drag from the
lower parts of the slider., f 84;
#X text 759 662 stumble mode will divide the set cycle duration according
to the set values for each step. values of 0 are skipped., f 39;
#X text 479 699 See callback after run or stumble here., f 20;
#X text 173 640 right inlet accepts "pos-abs" messages only to easily
connect 2 modules., f 27;
#X text 919 226 visualize partition groups, f 16;
#X text 226 226 900 (red) \; lime \; bright-green, f 23;
#X text 26 177 KEY:, f 5;
#X text 26 202 VALUE:;
#X text 26 226 EXAMPLE:;
#X obj 228 284 bng 19 250 50 0 \$0-show-colors empty click\\\ to\\\ show\\\ colors
23 10 0 12 #ffffff #000000 #000000;
#X obj 1123 105 bng 19 250 50 0 \$0-show-examples empty click\\\ for\\\ examples
23 10 0 12 #ffffff #000000 #000000;
#X msg 762 576 stumble -2000;
#X text 863 575 cycle backwards via negative duration;
#X text 926 474 will jump to position based on weighted value probability.
, f 23;
#X obj 1123 498 s \$0-receive;
#X msg 1123 399 permute 1 2 3 4 5 6 0;
#X text 1131 420 either by list of indices;
#X text 1192 442 or randomly;
#X obj 1 1 cnv 15 1360 48 empty empty empty 20 12 0 14 #f0f0f0 #404040
0;
#X text 25 15 vsl.seq : sequencer with step velocities and multiple
input/output/manipulation options, f 89;
#N canvas 575 267 803 641 helpers 0;
#X obj 93 191 pdcontrol;
#X msg 93 164 dir;
#X obj 40 251 pack s s;
#X obj 93 134 loadbang;
#X msg 40 282 \; pd open \$1 \$2;
#X obj 93 221 makefilename %s/;
#X msg 40 65 vsl.seq-help.colors.pd;
#X obj 40 40 r \$0-show-colors;
#X msg 230 65 vsl.seq-help.examples.pd;
#X obj 230 40 r \$0-show-examples;
#X obj 556 41 loadbang;
#X obj 602 119 s \$0-wavecontrol;
#X obj 556 202 until;
#X msg 556 178 8;
#X obj 556 65 t b b b;
#X msg 579 148 0;
#X obj 556 226 f;
#X obj 585 226 + 1;
#X msg 602 95 reset;
#X obj 556 261 t f f;
#X obj 556 342 pipe;
#X obj 556 366 t f f;
#X msg 588 420 1 \$1;
#X obj 588 444 /;
#X obj 556 473 pack f f 1000;
#X obj 556 497 list prepend set;
#X obj 556 521 list append out;
#X obj 556 545 list trim;
#X obj 556 569 s \$0-wavecontrol;
#X obj 588 396 + 1;
#X obj 588 291 + 2;
#X obj 588 315 * 400;
#X obj 381 474 sel 0;
#X msg 381 498 0 \, 1 1000;
#X obj 381 522 line;
#X obj 381 546 s \$0-normalize-range;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 5 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 8 0 2 0;
#X connect 9 0 8 0;
#X connect 10 0 14 0;
#X connect 12 0 16 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 14 1 15 0;
#X connect 14 2 18 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X connect 16 0 19 0;
#X connect 17 0 16 1;
#X connect 18 0 11 0;
#X connect 19 0 20 0;
#X connect 19 1 30 0;
#X connect 20 0 21 0;
#X connect 21 0 24 0;
#X connect 21 0 32 0;
#X connect 21 1 29 0;
#X connect 22 0 23 0;
#X connect 23 0 24 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 29 0 22 0;
#X connect 30 0 31 0;
#X connect 31 0 20 1;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X restore 1274 16 pd helpers;
#X msg 1131 443 shuffle;
#X msg 1019 399 seed 42;
#X text 1015 420 seed randoms;
#X text 26 128 length can also be set by just providing a number without
a key for convenience., f 82;
#X text 26 107 You can initialize the following parameters via -<key>
<value>., f 64;
#X text 524 226 rasterizes scale outputs to ints, f 16;
#X obj 795 284 print sent messages;
#X text 668 177 receiver, f 14;
#X text 793 177 sender, f 14;
#X text 920 177 partition;
#X text 919 202 float (0-32), f 16;
#X text 668 202 string, f 14;
#X text 793 201 string, f 14;
#X text 1208 470 sort;
#X msg 1147 471 sort -1;
#X text 1120 372 permute/shuffle/sort values;
#X msg 239 550 sum;
#X text 97 576 reset all;
#X text 292 576 output all;
#X text 272 549 output value sum;
#X msg 239 577 output;
#X msg 770 601 stumble 1000 done;
#X text 907 600 with callback;
#X msg 447 601 run -2000 done;
#X connect 0 0 61 0;
#X connect 1 0 61 0;
#X connect 12 0 13 0;
#X connect 17 0 20 0;
#X connect 18 0 20 0;
#X connect 22 0 92 0;
#X connect 26 0 23 0;
#X connect 27 0 23 0;
#X connect 29 0 61 1;
#X connect 33 0 30 0;
#X connect 34 0 30 0;
#X connect 41 0 40 0;
#X connect 45 0 61 0;
#X connect 46 0 35 0;
#X connect 48 0 35 0;
#X connect 52 0 50 0;
#X connect 60 0 36 0;
#X connect 61 1 60 1;
#X connect 62 1 57 0;
#X connect 64 0 38 0;
#X connect 76 0 43 0;
#X connect 80 0 79 0;
#X connect 86 0 79 0;
#X connect 87 0 50 0;
#X connect 100 0 79 0;
#X connect 102 0 61 0;
#X connect 106 0 61 0;
#X connect 107 0 43 0;
#X connect 109 0 38 0;
